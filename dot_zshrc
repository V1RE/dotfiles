if type brew &>/dev/null
then
  FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
  FPATH="${HOME}/.zsh:${FPATH}"

  autoload -Uz compinit
  compinit
fi

[[ -e ~/.antidote ]] || git clone https://github.com/mattmc3/antidote.git ~/.antidote

. ~/.antidote/antidote.zsh

antidote load

# Extend PATH.
path=(~/bin $path)

zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'exa -1 -a --color=always $realpath'
zstyle ':fzf-tab:complete:(-command-|-parameter-|-brace-parameter-|export|unset|expand):*' fzf-preview 'echo ${(P)word}'

# Export environment variables.
export GPG_TTY=$TTY

bindkey -s '^ ' 'lfcd^M'

# Autoload functions.
autoload -Uz zmv

# Define aliases.
alias tree='tree -a -I .git'

# Add flags to existing aliases.
alias ls="${aliases[ls]:-ls} -A"

setopt glob_dots
setopt autocd
setopt hist_ignore_dups
setopt hist_ignore_space
setopt inc_append_history
setopt share_history

export XDG_CONFIG_HOME="$HOME/.config"
export EDITOR="nvim"
export VISUAL=$EDITOR
export MANPAGER='$EDITOR +Man!'
export MANWIDTH=999
export BAT_PAGER="/usr/bin/less"
export GIT_PAGER="delta"
export BROWSER="open"
export REDO_HISTORY_PATH="$HISTFILE"
export REDO_ALIAS_PATH="$HOME/.config/redo/aliases"
export HISTSIZE=1000000000
export SAVEHIST=$HISTSIZE
setopt EXTENDED_HISTORY
set -k

export ZSH_FZF_HISTORY_SEARCH_END_OF_LINE='true'

export ZVM_VI_SURROUND_BINDKEY="s-prefix"
export ZVM_TERM="xterm-256color"

eval "$(direnv hook zsh)"
eval "$(starship init zsh)"
# eval "$(oh-my-posh init zsh --config ~/.config/oh-my-posh/config.omp.json)"
eval "$(rbenv init - zsh)"
# eval "$(gh completion -s zsh)"
source "$(redo alias-file)"
source "$HOME/.config/lf/lficons.zsh"

export PATH="$HOME/go/bin/:$PATH"
export PATH="/usr/local/opt/openjdk/bin:$PATH"

export ANDROID_HOME="$HOME/Library/Android/sdk"
export PATH="$PATH:$ANDROID_HOME/emulator"
export PATH="$PATH:$ANDROID_HOME/tools"
export PATH="$PATH:$ANDROID_HOME/tools/bin"
export PATH="$PATH:$ANDROID_HOME/platform-tools"
export PATH="$PATH:$HOME/.yarn/bin"
export PATH="$PATH:$HOME/.config/yarn/global/node_modules/.bin"

# Define functions and completions.
function md() { [[ $# == 1 ]] && mkdir -p -- "$1" && cd -- "$1" }
compdef _directories md

bindkey '^x' create_completion

source ~/.aliases
# source ~/bin/_p
eval "$(zoxide init zsh)"
export VOLTA_HOME="$HOME/.volta"
export PATH="$VOLTA_HOME/bin:$PATH"

# source "$HOME/.config/broot/launcher/bash/br"
# export PYENV_ROOT="$HOME/.pyenv"
# command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
# eval "$(pyenv init -)"
#
# #THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
# export SDKMAN_DIR="$HOME/.sdkman"
# [[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"
#
# # bun completions
# [ -s "/Users/niels/.bun/_bun" ] && source "/Users/niels/.bun/_bun"
#
# # bun
# export BUN_INSTALL="$HOME/.bun"
# export PATH="$BUN_INSTALL/bin:$PATH"
#
# export DENO_INSTALL="$HOME/.deno"
# export PATH="$DENO_INSTALL/bin:$PATH"

# tabtab source for packages
# uninstall by removing these lines
[[ -f ~/.config/tabtab/zsh/__tabtab.zsh ]] && . ~/.config/tabtab/zsh/__tabtab.zsh || true

# pnpm
export PNPM_HOME="/Users/niels/Library/pnpm"
export PATH="$PNPM_HOME:$PATH"
# pnpm end